<?php
/**
 * @file
 * Code for the CRM Core Event Sample Content feature.
 */

include_once 'ableorganizer_event_sample_content.features.inc';

/**
 * Implements hook_uuid_node_features_rebuild_alter().
 *
 * Update field_cmcev_date of event node so they will cover current month fully.
 * Expecting to have 5 event nodes to set each event to held 6 days.
 */
function ableorganizer_event_sample_content_uuid_node_features_rebuild_alter(&$node, $module) {
  if ($module == 'ableorganizer_event_sample_content' && $node->type == 'cmcev_event') {
    // We have only 5 event nodes.
    $event_nodes = 5;
    // Features can be rebuilt multiple times during single page request.
    // We must track this.
    $counter =& drupal_static('cmcev_counter', 0);
    $duration = 6;
    $start_day =& drupal_static('cmcev_start', 1);
    $start_hour = '09:00:00';
    $end_day =& drupal_static('cmcev_end', 6);
    $end_hour = '19:00:00';
    $tz = variable_get('date_default_timezone', 'UTC');
    $format = 'Y-m-d';

    $date = new DateObject('now', $tz);
    $year = $date->format('Y');
    $month = $date->format('m');
    $start_date = $date->setDate($year, $month, $start_day)->format($format);
    $end_date = $date->setDate($year, $month, $end_day)->format($format);

    $field = array(
      LANGUAGE_NONE => array(
        array(
          'value' => $start_date . ' ' . $start_hour,
          'value2' => $end_date . ' ' . $end_hour,
          'timezone' => $tz,
          'timezone_db' => $tz,
          'date_type' => 'datetime',
        ),
      ),
    );

    $start_day += $duration;
    $end_day += $duration;
    $counter++;
    if ($counter === $event_nodes) {
      drupal_static('cmcev_counter', 0, TRUE);
      drupal_static('cmcev_start', 1, TRUE);
      drupal_static('cmcev_end', 6, TRUE);
    }

    $node->field_cmcev_date = $field;
  }
}

/**
 * Implements hook_enable().
 */
function ableorganizer_event_sample_content_enable() {
  _ableorganizer_event_sample_content_set_config();
}

/**
 * Helper to set config for event content.
 */
function _ableorganizer_event_sample_content_set_config() {
  module_enable(array('uuid', 'uuid_path', 'uuid_features'));
  // Saving profile nodes configuration.
  $module = 'ableorganizer_event_sample_content';

  // Including sample nodes definitions.
  module_load_include('inc', $module, $module . '.features.uuid_node');

  // Including helper.
  module_load_include('inc', 'uuid_features', 'includes/uuid_node.features');

  // Creating sample content in DB.
  uuid_node_features_rebuild($module);
  $content_uuids = array(
    'simple_reg_form' => 'c4e0254b-e193-4f95-b843-fde40151fd81',
    'simple_single_form' => '52a80050-d98f-4bbf-90e8-9526dd3c77a1',
    'simple_many_form' => '8cbf5460-9633-4fcd-a730-c5832c19e5f0',
    'simple_quantity_form' => '37106c78-84c8-4e74-a387-5c04b03f5375',
    'phonebank' => 'e340d2ab-485b-4e68-b35c-c4e07a7b80c5',
  );

  // Getting local IDs from universal.
  $nids = entity_get_id_by_uuid('node', $content_uuids);

  $crm_core_profile_nodes = array(
    array(
      'nid' => $nids[$content_uuids['simple_reg_form']],
      'use_profile' => '1',
      'profile_name' => 'ao_cmcev_simple_reg_form',
      'display_profile' => '1',
      'inline_title' => 'Registration form',
    ),
    array(
      'nid' => $nids[$content_uuids['simple_single_form']],
      'use_profile' => '1',
      'profile_name' => 'ao_cmcev_simple_single_form',
      'display_profile' => '1',
      'inline_title' => 'Registration form',
    ),
    array(
      'nid' => $nids[$content_uuids['simple_many_form']],
      'use_profile' => '1',
      'profile_name' => 'ao_cmcev_simple_many_form',
      'display_profile' => '1',
      'inline_title' => 'Registration form',
    ),
    array(
      'nid' => $nids[$content_uuids['simple_quantity_form']],
      'use_profile' => '1',
      'profile_name' => 'ao_cmcev_simple_quantity_form',
      'display_profile' => '1',
      'inline_title' => 'Registration form',
    ),
  );

  $fields = array(
    'nid',
    'use_profile',
    'profile_name',
    'display_profile',
    'inline_title',
  );
  $query = db_insert('crm_core_profile_nodes')
    ->fields($fields);

  foreach ($crm_core_profile_nodes as $node_config) {
    $query->values($node_config);
  }

  $query->execute();

  // Configure the default email settings, if they are enabled.
  $thank_you_email = '';
  if (variable_get('configure_event_email', 0) === 1) {
    $thank_you_email = 'rules_cmcev_thank_you_message';
  }

  // Create the appropriate settings for each event page.
  $query = db_insert('crm_core_event_nodes')->fields(array('nid', 'thanks_email'));
  foreach ($crm_core_profile_nodes as $event) {
    $query->values(array($event['nid'], $thank_you_email));
  }
  $query->execute();

  // Saving path alias for 'Thank you' page.
  $thank_you_uuid = '88e4e269-7dff-48ef-a527-c109f2e9ca6f';
  $thank_you_id = entity_get_id_by_uuid('node', array($thank_you_uuid));
  $thank_you_id = $thank_you_id[$thank_you_uuid];

  // Setup aliases.
  $content_aliases = array();
  $content_aliases[] = array(
    'source' => 'node/' . $thank_you_id,
    'alias' => 'event/thank-you',
  );
  $content_aliases[] = array (
    'source' => 'node/' . $nids[$content_uuids['simple_reg_form']],
    'alias' => 'event/basic',
  );
  $content_aliases[] = array(
    'source' => 'node/' . $nids[$content_uuids['simple_single_form']],
    'alias' => 'event/single-ticket',
  );
  $content_aliases[] = array(
    'source' => 'node/' . $nids[$content_uuids['simple_many_form']],
    'alias' => 'event/multiple-ticket-level',
  );
  $content_aliases[] = array(
    'source' => 'node/' . $nids[$content_uuids['simple_quantity_form']],
    'alias' => 'event/multiple-ticket-levels-quantity',
  );
  $content_aliases[] = array(
    'source' => 'node/' . $nids[$content_uuids['phonebank']],
    'alias' => 'event/phonebank',
  );
  foreach($content_aliases as $path) {
    path_save($path);
  }
}
