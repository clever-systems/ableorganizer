/**
 * @file
 * Controls the appearance and behavior of tables.
 */
/**
 * DEFAULT VARIABLES
 * Default settings, see mixin documentation for explanations.
 */
$ao-table-width: 100% !default;
$ao-table-border-top: false !default;
$ao-table-border-bottom: false !default;
$ao-table-border-left: false !default;
$ao-table-border-right: false !default;
$ao-table-border-collapse: collapse !default;
$ao-table-border-spacing: collapse !default;
$ao-table-margin: false !default;
$ao-table-padding: false !default;
$ao-table-row-border-top: false !default;
$ao-table-row-border-bottom: false !default;
$ao-table-row-border-left: false !default;
$ao-table-row-border-right: false !default;
$ao-table-row-hover-color: false !default;
$ao-table-row-hover-color-even: false !default;
$ao-table-row-hover-color-odd: false !default;
$ao-table-cell-border-top: false !default;
$ao-table-cell-border-bottom: false !default;
$ao-table-cell-border-left: false !default;
$ao-table-cell-border-right: false !default;
$ao-table-cell-background-color: false !default;
$ao-table-cell-background-color-even: false !default;
$ao-table-cell-background-color-odd: false !default;
$ao-table-cell-padding: false !default;
$ao-table-header-background-color: false !default;
$ao-table-header-background-image: false !default;
$ao-table-responsive-style: false !default;
$ao-table-responsive-breakpoint: false !default;


/**
 * AO TABLE
 * Controls the appearance of tables
 *
 * Variables:
 *
 * $ao-table-responsive-style: presets for responsive tables. Defaults to false.
 *
 */
@mixin ao-table (

  $ao-table-responsive-style: $ao-table-responsive-style,
  $ao-table-width: $ao-table-width,
  $ao-table-margin: $ao-table-margin,
  $ao-table-padding: $ao-table-padding,
  $ao-table-border-top: $ao-table-border-top,
  $ao-table-border-bottom: $ao-table-border-bottom,
  $ao-table-border-left: $ao-table-border-left,
  $ao-table-border-right: $ao-table-border-right,
  $ao-table-row-border-top: $ao-table-row-border-top,
  $ao-table-row-border-bottom: $ao-table-row-border-bottom,
  $ao-table-row-border-left: $ao-table-row-border-left,
  $ao-table-row-border-right: $ao-table-row-border-right,
  $ao-table-row-hover-color: $ao-table-row-hover-color,
  $ao-table-row-hover-color-even: $ao-table-row-hover-color-even,
  $ao-table-row-hover-color-odd: $ao-table-row-hover-color-odd,
  $ao-table-cell-border-top: $ao-table-cell-border-top,
  $ao-table-cell-border-bottom: $ao-table-cell-border-bottom,
  $ao-table-cell-border-left: $ao-table-cell-border-left,
  $ao-table-cell-border-right: $ao-table-cell-border-right,
  $ao-table-cell-background-color: $ao-table-cell-background-color,
  $ao-table-cell-background-color-even: $ao-table-cell-background-color-even,
  $ao-table-cell-background-color-odd: $ao-table-cell-background-color-odd,
  $ao-table-cell-padding: $ao-table-cell-padding,
  $ao-table-border-collapse: $ao-table-border-collapse,
  $ao-table-border-spacing: $ao-table-border-spacing,
  $ao-table-header-background-image: $ao-table-header-background-image,
  $ao-table-header-background-color: $ao-table-header-background-color
  
) {

  // basic table display
  @if $ao-table-width != false {
    width: $ao-table-width;
  }
  @if $ao-table-border-top != false {
    border-top: $ao-table-border-top;
  }
  @if $ao-table-border-bottom != false {
    border-bottom: $ao-table-border-bottom;
  }
  @if $ao-table-border-left != false {
    border-left: $ao-table-border-left;
  }
  @if $ao-table-border-right != false {
    border-right: $ao-table-border-right;
  }
  @if $ao-table-border-collapse != false {
    border-right: $ao-table-border-collapse;
  }
  @if $ao-table-margin != false {
    margin: $ao-table-margin;
  }
  @if $ao-table-padding != false {
    padding: $ao-table-padding;
  }
  
  // header
  // there should be a special style for checkboxes
  // there should be a special style for icons
  // there should be a special style for backgrounds
  // Q: how are we handling rounded borders? This should be queued off the table itself
  
  TH {
    @if $ao-table-header-background-image != false {
      @include background-image($ao-table-header-background-image);
    }
    @if $ao-table-header-background-color != false {
      background-color: $ao-table-header-background-color;
    }
    
    &:first-child {
      // if there are rounded corners on the table, we need to apply them here as well
    }
    &:last-child {
      // if there are rounded corners on the table, we need to apply them here as well
    }
  }
  
  // rows
  TR {

    @if $ao-table-row-border-top != false {
      border-top: $ao-table-row-border-top;
    }
    @if $ao-table-row-border-bottom != false {
      border-bottom: $ao-table-row-border-bottom;
    }
    @if $ao-table-row-border-left != false {
      border-left: $ao-table-row-border-left;
    }
    @if $ao-table-row-border-right != false {
      border-right: $ao-table-row-border-right;
    }
    &.odd {
      // odd striping goes here
    }
    &.even {
      // even striping goes here
    }

    // cells
    TD {
      @if $ao-table-cell-border-top != false {
        border-top: $ao-table-cell-border-top;
      }
      @if $ao-table-cell-border-bottom != false {
        border-bottom: $ao-table-cell-border-bottom;
      }
      @if $ao-table-cell-border-left != false {
        border-left: $ao-table-cell-border-left;
      }
      @if $ao-table-cell-border-right != false {
        border-right: $ao-table-cell-border-right;
      }
      @if $ao-table-cell-background-color != false {
        background-color: $ao-table-cell-background-color;
      }
      @if $ao-table-cell-padding != false {
        padding: $ao-table-cell-padding;
      }
      &:first-child {
        @if $ao-table-row-border-left != false {
          border-left: $ao-table-row-border-left;
        }
      }
      &:last-child {
        @if $ao-table-row-border-right != false {
          border-right: $ao-table-row-border-right;
        }
      }
    }
    
    // striping
    &.even {
      TD {
        @if $ao-table-cell-background-color-even != false {
          background-color: $ao-table-cell-background-color-even;
        }
      }
      @if $ao-table-row-hover-color-even != false {
        &:hover {
          TD {
            background-color: $ao-table-row-hover-color-even;
          }
        }
      }
    }
    &.odd {
      TD {
        @if $ao-table-cell-background-color-odd != false {
          background-color: $ao-table-cell-background-color-odd;
        }
      }
      @if $ao-table-row-hover-color-odd != false {
        &:hover {
          TD {
            background-color: $ao-table-row-hover-color-odd;
          }
        }
      }
    }
    
    // table border
    // the table will not do this itself, we use the cells to do the borders
    @if $ao-table-border-bottom != false {
      &:last-child {
        TD {
          border-bottom: $ao-table-border-bottom;
        }
      }
    }
  }
    
  /* RESPONSIVE TABLES */
  /* Flipscroll - http://elvery.net/demo/responsive-tables/ */
  @if $ao-table-responsive-style == flip-scroll {
    @include breakpoint($ao-table-responsive-breakpoint){
      display: block; 
      position: relative; 
      width: 100%;
    
      THEAD {
        display: block; 
        float: left; 
        TR {
          display: block; 
        }
      }
      TBODY {
        display: block; 
        width: auto; 
        position: relative; 
        overflow-x: auto; 
        white-space: nowrap; 
        TR {
          display: inline-block; 
          vertical-align: top;        
        }
      }
      TD {
        margin: 0; 
        vertical-align: top;      
        display: block; 
        min-height: 1.25em; 
        text-align: left;
      }
      TH {
        text-align: left;
        display: block; 
        text-align: right;
      }
    
      /* sort out borders 
        #flip-scroll th { border-bottom: 0; border-left: 0; }
        #flip-scroll td { border-left: 0; border-right: 0; border-bottom: 0; }
        #flip-scroll tbody tr { border-left: 1px solid #babcbf; }
        #flip-scroll th:last-child,
        #flip-scroll td:last-child { border-bottom: 1px solid #babcbf; }    
      */    
    }
  }

}

/* THIS IS THE OLD STUFF */


/* container tables */
/* used to display contacts */


/* data tables */
/* displays tables related to run downs of data within reports */
.data-tables {

  .table-container,
  .view-content {
    background-color: #f1f1f1;
    padding: 0em .2em .2em;
    margin: 0em 0em .8em;
    border: 1px solid #CCC;
    -webkit-border-radius: 8px;
    border-radius: 8px;
    
    TABLE {
    
      margin-bottom: 0em;
    
      TR {
        TD {
        }
      }
    }
  }
}

/* handles the display of summary items */
.data-summary {
  .table-container,
  .views-table {
    TR {
      TD {
        background-color: White;
        text-align: center;
        font-weight: 600;
        font-size: $h2-font-size;
        padding: .5em 0em;
      }
    }
  }
}

.table-container TABLE,
.views-table {
  @extend .container-table;
} 
 