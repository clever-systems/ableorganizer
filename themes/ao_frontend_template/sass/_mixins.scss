// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;
  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

/**
 * turns a block or a panel page containing a menu into a drop down
 *
 * $border-radius - Valid border radius value. Should be a single value.
 * $font-size - the size of the font for the button.
 * $base-color - valid color for the button and the background of the menu.
 * $secondary-color - valid color for the button and the background of the menu when hovered.
 * $option-color - The color of links in the button.
 * $option-font-size - The font size of links in the menu.
 * $option-width - 'full' to make the menu expand to the width of the container. Use an empty string for auto width.
 **/
@mixin -ao-button-drop-down ($border-radius, $font-size, $base-color, $secondary-color, $option-color, $option-font-size, $option-width) {
  H2.pane-title,
  H2.block-title {
    @include sassy-button("flat", $border-radius, $font-size, $base-color, $secondary-color, $option-color, "Raised");
    @include sassy-button-structure($border-radius, $font-size, 0.25em 1em);
    font-weight: normal;
  }
  UL.menu {
    display: none;
    @include transition-property(all);
    @include transition-duration(.2s);
    @include transition-timing-function(ease-in-out);  
  }
  &:hover {
    H2.pane-title,
    H2.block-title {
      @include transition-property(all);
      @include transition-duration(.2s);
      @include transition-timing-function(ease-in-out);  
      @include border-radius($border-radius $border-radius 0em 0em);
    }
    UL.menu {
      display: block;
      position: absolute;
      top: $font-size*2.2;
      right: 0px;
      background-color: $base-color;
      white-space: nowrap;
      margin: 0em;
      padding: 0em;
      overflow: hidden;
      z-index: 1000;
      @include border-radius(0em 0em $border-radius $border-radius);
      @if $option-width == 'full' { min-width: 100%; }
      @include transition-property(all);
      @include transition-duration(.2s);
      @include transition-timing-function(ease-in-out);  

      LI {
        list-style-type: none;
        list-style-image: none;
        margin: 0em;
        padding: .5em 1em;
        font-size: $font-size;
        @include transition-property(all);
        @include transition-duration(.2s);
        @include transition-timing-function(ease-in-out);  
        &:hover {
          background-color: $secondary-color;
        }
        A {
          margin: 0em;
          padding: 0em;
          text-decoration: none;
          color: $option-color;
        }
      }
    }
  }
}
